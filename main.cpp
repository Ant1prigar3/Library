/*************************************************************
	Практическое занятие №5. Структуры
//динамический массив структур
//поиск
//сортировка
//сохранение в файле
//чтение из файла
*************************************************************/

#define _CRT_SECURE_NO_WARNINGS

#include <tchar.h>
#include <iostream>
#include <cstdio>
#include "fun_of_print_input.h"
#include "book.h"
#include "library.h"


#define	  stop __asm nop	
extern char cat[8][100];

int main()
{
	setlocale(LC_ALL, "rus");
	LIB myCart{};
	myCart.count = 0;
	myCart.maxlen = 30;
	myCart.books = new BOOK * [myCart.maxlen];
	char comand;
	do {
		PrintMenu();
		comand = ScanMenu();
		switch (comand) {
		case 'n': { //работает
			Сreatbook(myCart);
			break;
		}
		case 'p': { //работает
			PrintLib(myCart);
			break;
		}
		case 's': { //работает
			if (myCart.count > 1) {
				PrintSortMenu();
				ScanSortDel(true, myCart);
			}
			else if (myCart.count == 1){
				printf("\nВ картотеке всего одна книга (для сортировки необходимо больше книг), попробуйте их добавить.\n\n");
			}
			else {
				printf("\nК сожалению, в картотеке нет ни одной книги, попробуйте их добавить.\n\n");
			}
			break;
		}
		case 'd': { //работает
			if (myCart.count >= 1) {
				PrintDelMenu();
				ScanSortDel(false, myCart);
			}
			else {
				printf("\nК сожалению, в картотеке нет ни одной книги, попробуйте их добавить.\n\n");
			}
			break;
		}
		case 'e': { //работает
			if (myCart.count > 0) {
				ExportInFile(myCart);
				printf("\nКартотека успешно скопирована в файл 'cartoteka.txt'\n\n");
			}
			else {
				printf("\nК сожалению, в картотеке нет ни одной книги, попробуйте их добавить.\n\n");
			}
			break;
		}
		case 'i': { //работает
			int x = ScanImp();
			if (ImportFromFile(myCart, x)) {
				printf("\nДанные успешно импортированны. Вернемся в главное меню.\n\n");
			}
			break;
		}
		case 'c': { 
			system("cls");
			break;
		}
		case 'k': { 
			PrintCat();
			int res = ScanCat();
			CatCount(myCart, res);
			break;
		}
		case 'f': { //работает
			printf("Завершение работы картотеки.");
			break;
		}
		default:
			printf("Некорректный ввод, повторите попытку\n");
			break;
		}
	} while (comand != 'f');
	DeleteLib(myCart); //удалить картотеку
	//Используйте структуру BOOK, созданную в предыдущей работе.
	//Для этого достаточно переписать и подключить к проекту файлы
	//book.h и book.cpp

	//Задание 1. Создаем «картотеку».
	//«Картотека» - это массив структур => нужно такой массив создать.
	//Замечание: размер массива придется увеличиватьпо мере добавления книг =>
	//Каким должен быть такой массив???


	//Пользователь должен иметь возможность по своему желанию выполнять
	//разные действия с картотекой => нужно такую возможность ему
	//предоставить: это может выглядеть как вывод "меню" (перечень
	//возможных действий и соответствующих реакций пользователя), например:
	//Распечатать содержимое картотеки (1)
	//Ввести новую книгу (2)
	//Удалить существующую(ие) (3)
	//Записать текущее содержимое картотеки в файл (4)
	//Считать из файла содержимое в картотеку (5)
	//...
	//Выход из программы (...)


	//Реализуйте посредством функций разные возможности работы с картотекой




	//Подсказка1: для файлового ввода/вывода используйте функции fprintf и fscanf
	//(заголовочный файл <cstdio>



	// Подсказка2: удобно в качестве первого данного в файле хранить количество
	// книг в картотеке
	//Если файл существует и его удалось открыть
	//if()
	//{
	//Чтение данных из файла
	//а) считали количество элементов
	//б) создали массив требуемой размерности
	//в) считали данные из файла в массив
	//}




	//****************************************************************
	//Задание 2. Предоставьте пользователю возможность выводить перечень книг
	//в определенном порядке => напишите функцию (функции) сортировки массива
	//по любому из полей структуры.
	//Замечание: признак - "по какому полю сортируем" можно ввести с помощью
	//перечисления.


	return 0;
}